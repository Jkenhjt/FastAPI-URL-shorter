services:
  backend:
    depends_on:
      - db
      - redis
    build:
      context: .
    restart: always
    ports:
      - 8080:8000
    volumes:
      - backend_volume:/backend
  db:
    image: postgres:17.5-alpine3.22
    ports:
      - 5431:5432
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_url_shorter
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - db_volume:/var/lib/postgresql/data
  redis:
    build:
      context: ./redis_config
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/redis_config
  nginx:
    depends_on:
      - backend
    build:
      context: ./nginx_config
    restart: always
    ports:
      - 443:443
    volumes:
      - nginx_volume:/nginx_config
  node_exporter:
    image: prom/node-exporter
    ports:
      - 9100:9100
    volumes:
      - node_exporter:/node_exporter
  prometheus:
    build:
      context: ./prometheus_config
    ports:
      - 9090:9090
    volumes:
      - prometheus:/prometheus
  grafana:
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana


volumes:
  backend_volume:
  db_volume:
  redis_volume:
  nginx_volume:
  node_exporter:
  prometheus:
  grafana: